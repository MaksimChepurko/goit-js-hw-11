{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n// axios Settings\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst myApiKey = '49354290-35d6e1dc5d842ed86975730ff';\nconst axiosOptions = key => {\n  const params = {\n    params: {\n      key: myApiKey,\n      q: key,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      per_page: 40,\n    },\n  };\n  return params;\n};\n\nexport function apiRequest(requestKey) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get('', axiosOptions(requestKey))\n      .then(response => {\n        if (response.data.total !== 0) {\n          resolve(response.data.hits);\n          return;\n        } else {\n          reject(\n            `Sorry, there are no images matching your ${requestKey}. Please try again!`\n          );\n          return;\n        }\n      })\n      .catch(response => {\n        reject(response.message);\n      });\n  });\n}","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst simpleGallery = new SimpleLightbox('.item a', {\n  captions: true,\n  captionsData: 'alt',\n  captionDelay: 1000,\n});\n\nexport function renderRequest(arr, link) {\n  const markup = arr\n    .map(\n      ({\n        largeImageURL,\n        webformatURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n    <li class= \"item\">\n      <a href=\"${largeImageURL}\">\n        <img class= \"item-img\" src=\"${webformatURL}\" alt=\"${tags}\" />\n        <div class = \"item-descrp\">\n          <table>\n            <tr>\n              <th>Likes</th>\n              <th>Views</th>\n              <th>Comment</th>\n              <th>Downloads</th>\n            </tr>\n            <tr>\n              <td>${likes}</td>\n              <td>${views}</td>\n              <td>${comments}</td>\n              <td>${downloads}</td>\n            </tr>\n          </table>\n        </div>\n      </a>\n    </li>\n    `;\n      }\n    )\n    .join('');\n  link.insertAdjacentHTML('beforeend', markup);\n  const images = document.querySelectorAll('.item-img');\n  images.forEach(img => (img.onload = () => img.classList.add('loaded')));\n  simpleGallery.refresh();\n}\n\nexport function clearGallery() {\n  const gallery = document.querySelector('.gallery');\n  if (gallery) {\n    gallery.replaceChildren();\n  }\n}","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { apiRequest } from './js/pixabay-api';\nimport { clearGallery, renderRequest } from './js/render-functions';\nconst userForm = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\n\nconst elemLoader = document.querySelector('.loader');\nfunction startLoader() {\n  elemLoader.classList.add('active');\n}\nfunction stopLoader() {\n  elemLoader.classList.remove('active');\n}\n\nconst formReset = () => userForm.reset();\n\nuserForm.addEventListener('submit', event => {\n  event.preventDefault();\n  clearGallery();\n  const userRequest = userForm\n    .querySelector('[name=\"search-text\"]')\n    .value.trim();\n  if (userRequest !== '') {\n    startLoader();\n    apiRequest(userRequest)\n      .then(response => {\n        renderRequest(response, gallery);\n      })\n      .catch(error => {\n        iziToast.error({ message: error, position: 'center', timeout: 2000 });\n      })\n      .finally(() => {\n        stopLoader();\n        formReset();\n      });\n  } else {\n    iziToast.warning({\n      message: 'Field must not be empty!',\n      position: 'center',\n      timeout: 2000,\n    });\n    formReset();\n    return;\n  }\n});"],"names":["axios","myApiKey","axiosOptions","key","apiRequest","requestKey","resolve","reject","response","simpleGallery","SimpleLightbox","renderRequest","arr","link","markup","largeImageURL","webformatURL","tags","likes","views","comments","downloads","img","clearGallery","gallery","userForm","elemLoader","startLoader","stopLoader","formReset","event","userRequest","error","iziToast"],"mappings":"owBAEAA,EAAM,SAAS,QAAU,2BACzB,MAAMC,EAAW,qCACXC,EAAeC,IACJ,CACb,OAAQ,CACN,IAAKF,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,EACX,CACL,GAIO,SAASC,EAAWC,EAAY,CACrC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtCP,EACG,IAAI,GAAIE,EAAaG,CAAU,CAAC,EAChC,KAAKG,GAAY,CAChB,GAAIA,EAAS,KAAK,QAAU,EAAG,CAC7BF,EAAQE,EAAS,KAAK,IAAI,EAC1B,MACV,KAAe,CACLD,EACE,4CAA4CF,CAAU,qBAClE,EACU,MACD,CACT,CAAO,EACA,MAAMG,GAAY,CACjBD,EAAOC,EAAS,OAAO,CAC/B,CAAO,CACP,CAAG,CACH,CClCA,MAAMC,EAAgB,IAAIC,EAAe,UAAW,CAClD,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,EAAcC,EAAKC,EAAM,CACvC,MAAMC,EAASF,EACZ,IACC,CAAC,CACC,cAAAG,EACA,aAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,iBAEEN,CAAa;AAAA,sCACQC,CAAY,UAAUC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAU5CC,CAAK;AAAA,oBACLC,CAAK;AAAA,oBACLC,CAAQ;AAAA,oBACRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQxB,EACA,KAAK,EAAE,EACVR,EAAK,mBAAmB,YAAaC,CAAM,EAC5B,SAAS,iBAAiB,WAAW,EAC7C,QAAQQ,GAAQA,EAAI,OAAS,IAAMA,EAAI,UAAU,IAAI,QAAQ,CAAE,EACtEb,EAAc,QAAO,CACvB,CAEO,SAASc,GAAe,CAC7B,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC7CA,GACFA,EAAQ,gBAAe,CAE3B,CCtDA,MAAMC,EAAW,SAAS,cAAc,OAAO,EACzCD,EAAU,SAAS,cAAc,UAAU,EAE3CE,EAAa,SAAS,cAAc,SAAS,EACnD,SAASC,GAAc,CACrBD,EAAW,UAAU,IAAI,QAAQ,CACnC,CACA,SAASE,GAAa,CACpBF,EAAW,UAAU,OAAO,QAAQ,CACtC,CAEA,MAAMG,EAAY,IAAMJ,EAAS,QAEjCA,EAAS,iBAAiB,SAAUK,GAAS,CAC3CA,EAAM,eAAc,EACpBP,IACA,MAAMQ,EAAcN,EACjB,cAAc,sBAAsB,EACpC,MAAM,KAAI,EACb,GAAIM,IAAgB,GAClBJ,IACAvB,EAAW2B,CAAW,EACnB,KAAKvB,GAAY,CAChBG,EAAcH,EAAUgB,CAAO,CACvC,CAAO,EACA,MAAMQ,GAAS,CACdC,EAAS,MAAM,CAAE,QAASD,EAAO,SAAU,SAAU,QAAS,GAAI,CAAE,CAC5E,CAAO,EACA,QAAQ,IAAM,CACbJ,IACAC,GACR,CAAO,MACE,CACLI,EAAS,QAAQ,CACf,QAAS,2BACT,SAAU,SACV,QAAS,GACf,CAAK,EACDJ,IACA,MACD,CACH,CAAC"}